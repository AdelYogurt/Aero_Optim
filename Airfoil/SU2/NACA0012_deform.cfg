%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Transonic inviscid optimization of a NACA0012 airfoil      %
% Author: Francisco Palacios                                                   %
% Institution: Stanford University                                             %
% Date: 2013.09.29                                                             %
% File Version 7.3.1 "blackbird"                                               %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ----------------------- BOUNDARY CONDITION DEFINITION -----------------------%
%
% Marker of the Euler boundary (0 = no marker)
MARKER_EULER= ( AIRFOIL_UP, AIRFOIL_LOW )
% Marker of the far field (0 = no marker)
MARKER_FAR= ( FARFIELD )

% ------------------------ SURFACES IDENTIFICATION ----------------------------%
%
% Marker of the surface which is going to be plotted or designed
MARKER_PLOTTING= ( AIRFOIL_UP, AIRFOIL_LOW )

% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%
%
% Linear solver for the implicit (or discrete adjoint) formulation (LU_SGS,
%                                              SYM_GAUSS_SEIDEL, BCGSTAB, GMRES)
LINEAR_SOLVER= FGMRES
% Preconditioner of the Krylov linear solver (NONE, JACOBI, LINELET, LUSGS)
LINEAR_SOLVER_PREC= LU_SGS
% Min error of the linear solver for the implicit formulation
LINEAR_SOLVER_ERROR= 1E-4
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 2

% --------------------- FLOW NUMERICAL METHOD DEFINITION ----------------------%
% Convective numerical method (JST, LAX-FRIEDRICH, ROE-1ST_ORDER, 
%                              ROE-2ND_ORDER)
CONV_NUM_METHOD_FLOW= JST
% Slope limiter (VENKATAKRISHNAN)
SLOPE_LIMITER_FLOW= VENKATAKRISHNAN
% 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= ( 0.5, 0.02 )
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT

% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
% Number of smoothing iterations for FEA mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 500
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
% Minimum residual criteria for the linear solver convergence of grid deformation
DEFORM_LINEAR_SOLVER_ERROR= 1E-14
% Deformation coefficient (linear elasticity limits from -1.0 to 0.5, a larger
% value is also possible)
DEFORM_COEFF= -0.0
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME, 
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE
% Deform the grid only close to the surface. It is possible to specify how much
% of the volumetric grid is going to be deformed in meters or inches (1E6 by default)
DEFORM_LIMIT = 1E6

% ---------------- MESH DEFORMATION PARAMETERS (NEW SOLVER) -------------------%
%
% Use the reformatted pseudo-elastic solver for grid deformation
DEFORM_MESH= YES
%
% Moving markers which deform the mesh
MARKER_DEFORM_MESH= ( AIRFOIL_UP, AIRFOIL_LOW )

% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation (NO_DEFORMATION, SCALE_GRID, TRANSLATE_GRID, ROTATE_GRID,
%                      FFD_SETTING, FFD_NACELLE,
%                      FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST
%                      FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D,
%                      FFD_TWIST_2D, HICKS_HENNE, SURFACE_BUMP, SURFACE_FILE)
DV_KIND= SURFACE_FILE
DV_PARAM= ( 1.0 )

% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= ( AIRFOIL_UP, AIRFOIL_LOW )

% For DV_KIND = SURFACE_FILE: With SU2_DEF, give filename for surface
% deformation prescribed by an external parameterization. List moving markers
% in DV_MARKER and provide an ASCII file with name specified with DV_FILENAME
% and with format:
% GlobalID_0, x_0, y_0, z_0
% GlobalID_1, x_1, y_1, z_1
%   ...
% GlobalID_N, x_N, y_N, z_N
% where N is the total number of vertices on all moving markers, and x/y/z are
% the new position of each vertex. Points can be in any order.
DV_FILENAME= airfoil_deform.dat

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
% Screen output
SCREEN_OUTPUT= (INNER_ITER, RMS_DENSITY, RMS_ENERGY, LIFT, DRAG)

% Mesh input file
MESH_FILENAME= NACA0012.cgns
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= CGNS
% Mesh output file
MESH_OUT_FILENAME= airfoil_deform.su2

% Files to output
% Possible formats : (TECPLOT_ASCII, TECPLOT, SURFACE_TECPLOT_ASCII,
%  SURFACE_TECPLOT, CSV, SURFACE_CSV, PARAVIEW_ASCII, PARAVIEW_LEGACY, SURFACE_PARAVIEW_ASCII,
%  SURFACE_PARAVIEW_LEGACY, PARAVIEW, SURFACE_PARAVIEW, RESTART_ASCII, RESTART, CGNS, SURFACE_CGNS, STL_ASCII, STL_BINARY)
% default : (RESTART, PARAVIEW, SURFACE_PARAVIEW)
OUTPUT_FILES = ( SURFACE_CSV, TECPLOT_ASCII )
